{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "iotHubName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Name of the IoT Hub"
      }
    },
    "IoTManagementAppPlanName": {
      "type": "string",
      "minLength": 1
    },
    "IoTManagementAppName": {
      "type": "string",
      "minLength": 1
    },
    "IoTManagementAppPlanSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "S1",
        "S2",
        "S3"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "ioTHub_skuName": {
      "type": "string",
      "allowedValues": [
        "F1",
        "S1",
        "S2",
        "S3"
      ],
      "defaultValue": "S1",
      "metadata": {
        "description": "Recommended is S3"
      }
    },
    "capacityUnits": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "metadata": {
        "description": "Calculate the estimate number of messages and set this accordingly."
      }
    },
    "Streamingjobname": {
      "type": "string",
      "metadata": {
        "description": "Name of the Streaming Job"
      }
    },
    "Storageeuropedata_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage for Europe"
      }
    },
    "StorageUSdata_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage for US"
      }
    },
    "Storagegeneraldata_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage for any other regions"
      }
    },
    "UserandReferenceData_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage to store user and reference data"
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2016-02-03",
      "location": "[resourceGroup().location]",
      "name": "[parameters('iotHubName')]",
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "endpoint": "string"
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "endpoint": "string"
          }
        }
      },
      "sku": {
        "name": "[parameters('ioTHub_skuName')]",
        "capacity": "[parameters('capacityUnits')]"
      },
      "type": "Microsoft.Devices/iotHubs"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('Storageeuropedata_name')]",
      "apiVersion": "2017-10-01",
      "location": "westeurope",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('StorageUSdata_name')]",
      "apiVersion": "2017-10-01",
      "location": "East US 2",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('Storagegeneraldata_name')]",
      "apiVersion": "2017-10-01",
      "location": "West Europe",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "BlobStorage",
      "name": "[parameters('UserandReferenceData_name')]",
      "apiVersion": "2017-10-01",
      "location": "West Europe",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      },
      "dependsOn": []
    },
    {
      "name": "[parameters('IoTManagementAppPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "sku": {
        "name": "[parameters('IoTManagementAppPlanSkuName')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "IoTManagementAppPlan"
      },
      "properties": {
        "name": "[parameters('IoTManagementAppPlanName')]",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('IoTManagementAppPlanName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('IoTManagementAppName')]",
      "properties": {
        "name": "[parameters('IoTManagementAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('IoTManagementAppPlanName'))]"
      },
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('IoTManagementAppPlanName')))]": "Resource",
        "displayName": "IoTManagementApp"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "name": "[parameters('Streamingjobname')]",
      "apiVersion": "2017-04-01-preview",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "Name": "iotdata",
            "properties": {
              "type": "Stream",
              "datasource": {
                "type": "Microsoft.Devices/IotHubs",
                "properties": {
                  "iotHubNamespace": "IoTMonitoring",
                  "sharedAccessPolicyName": "iothubowner",
                  "sharedAccessPolicyKey": "[listkeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys',parameters('iotHubName'), 'iothubowner'),'2016-02-03').primaryKey]",
                  "endpoint": "messages/events"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8"
                }
              }
            },
            "type": "Microsoft.StreamAnalytics/streamingjobs/inputs"
          }
        ],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "query": "SELECT\r\n    *\r\nINTO\r\n  [dbUSdata]\r\nFROM\r\n    [iotdata]  WHERE location = 'US' \r\n SELECT\r\n    *\r\nINTO\r\n    [dbEuropeData]\r\nFROM\r\n    [iotdata] WHERE location = 'EU' \r\n SELECT\r\n    *\r\nINTO\r\n    [dbGeneralData]\r\nFROM\r\n    [iotdata] WHERE location = 'GN'",
            "streamingUnits": 1
          }
        },
        "outputs": [
          {
            "properties": {
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountKey": "storageaccountkey",
                      "accountName": "europedatastorage1"
                    }
                  ],
                  "container": "container4data",
                  "pathPattern": "",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              }
            },
            "name": "dbEuropeData",
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs"
          },
          {
            "properties": {
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountKey": "storageaccountkey",
                      "accountName": "usdatastorage1"
                    }
                  ],
                  "container": "container4data",
                  "pathPattern": "",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              }
            },
            "name": "dbUSData",
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs"
          },
          {
            "properties": {
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountKey": "storageaccountkey",
                      "accountName": "generaldatastorage1"
                    }
                  ],
                  "container": "container4data",
                  "pathPattern": "",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              }
            },
            "name": "dbGeneralData",
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs"
          }
        ]
      }
    }
  ],
      "outputs": {
        "iotHubKeys": {
          "value": "[listKeys(resourceId('Microsoft.Devices/iotHubs', parameters('iotHubName')), '2016-02-03')]",
          "type": "object"
        }
      }
}